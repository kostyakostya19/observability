--- 
services:
  grafana-test:
    image: grafana/grafana:11.5.1
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources      
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-focuspocus12}
      - psql_host=${psql_host:-127.0.0.1}
      - psql_port=${psql_port:-5432}
      - psql_db=${psql_db:-test}
      - psql_user=${psql_user:-test_usr}
      - psql_password=${psql_password:-1234}
    networks:
      - observability

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_config.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    networks:
      - observability

  loki:
    image: grafana/loki:3.4
    container_name: loki
    restart: always
    ports:
      - 3100:3100
    volumes:
      - ./loki_config.yml:/etc/loki/local-config.yml
    command:
      - '-config.file=/etc/loki/local-config.yml'
    networks:
      - observability

  node_exporter:
    image: prom/node-exporter:v1.9.0
    container_name: node_exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - '9100:9100'
    networks:
      - observability

  vector:
    image: timberio/vector:0.43.1-debian
    container_name: vector
    restart: always
    volumes:
      - ./vector_config.yml:/etc/vector/vector.yaml
    networks:
      - observability

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.49.1
#    container_name: cadvisor
#    restart: unless-stopped
#    ports:
#      - "8080:8080"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#      - /dev/disk:/dev/disk:ro
#    privileged: true

networks:
  observability:
    driver: bridge